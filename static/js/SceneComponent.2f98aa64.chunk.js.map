{"version":3,"sources":["containers/Menu/Scene/Scene.module.css","assets/images/bg.png","assets/images/bird.png","assets/images/fg.png","assets/images/pipeNorth.png","assets/images/pipeSouth.png","assets/sounds/fly.mp3","assets/sounds/score.mp3","helpers/createImage.ts","helpers/createAudio.ts","containers/Menu/Scene/constants.ts","containers/Menu/Scene/Scene.tsx"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","createAudio","Audio","backgroundImage","birdImage","groundImage","topPipeImage","bottomPipeImage","flySound","scoreSound","CANVAS","BIRD","position","x","y","sceneImages","Map","Background","Bird","Ground","TopPipe","BottomPipe","sounds","FlySound","ScoreSound","SCORE_TEXT","score","BIRD_COPY","_cloneDeep","Scene","canvasRef","useRef","canvasContext","pipesCoordinate","requestID","loadSceneImages","a","get","setStarterValues","useCallback","current","width","renderer","drawImage","i","length","constant","height","Math","floor","random","window","cancelAnimationFrame","play","fillStyle","font","fillText","requestAnimationFrame","removeEventListeners","removeEventListener","keyDownPressHandler","useEffect","getContext","className","classes","ref"],"mappings":"gOACe,EAAS,qB,iBCDT,MAA0B,+BCA1B,MAA0B,iCCA1B,MAA0B,+BCA1B,MAA0B,sCCA1B,MAA0B,sCCA1B,MAA0B,gCCA1B,MAA0B,kC,OCAlC,SAASA,EAAYC,GAC1B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,iBAAiB,QAAQ,kBAAMJ,EAAQE,MAC7CA,EAAME,iBAAiB,SAAS,SAAAC,GAAK,OAAIJ,EAAOI,MAChDH,EAAMI,aAAa,cAAe,aAClCJ,EAAMK,IAAMT,KCNT,SAASU,EAAYV,GAC1B,OAAO,IAAIW,MAAMX,GCSZ,ICSHY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EDZSC,EACJ,IADIA,EAEH,IAGGC,EAAsC,CACjDC,SAAW,CACTC,EAAG,GACHC,EAAG,MAOMC,EAAc,IAAIC,IAAI,CACjC,CACE,aACA1B,EAAY2B,IAEd,CACE,OACA3B,EAAY4B,IAEd,CACE,SACA5B,EAAY6B,IAEd,CACE,UACA7B,EAAY8B,IAEd,CACE,aACA9B,EAAY+B,MAIHC,EAAS,IAAIN,IAAI,CAC5B,CACE,MACAf,EAAYsB,IAEd,CACE,QAAStB,EAAYuB,MAIZC,EACL,OADKA,EAEL,sBAFKA,EAGL,SAACC,GAAD,uBAA6BA,IC/C/BC,EAAYC,IAAWjB,GAoLdkB,EA1KD,WACV,IAAMC,EAAYC,iBAA0B,MACtCC,EAAgBD,mBAChBE,EAAkBF,iBAA0B,IAE5CL,EAAQK,iBAAe,GACvBG,EAAYH,iBAAe,GAE3BI,EAAe,uCAAG,sBAAAC,EAAA,sEACErB,EAAYsB,IAAI,cADlB,cACtBlC,EADsB,gBAEJY,EAAYsB,IAAI,QAFZ,cAEtBjC,EAFsB,gBAGFW,EAAYsB,IAAI,UAHd,cAGtBhC,EAHsB,iBAIDU,EAAYsB,IAAI,WAJf,eAItB/B,EAJsB,iBAKES,EAAYsB,IAAI,cALlB,QAKtB9B,EALsB,mDAAH,qDAmBjB+B,EAAmBC,uBAAY,WAAO,IAAD,EACzCZ,EAAUf,SAAV,eACKD,EAAKC,UAGVc,EAAMc,QAAU,EAEhBP,EAAgBO,QAAU,CACxB,CACE3B,EAAC,UAAEiB,EAAUU,eAAZ,aAAE,EAAmBC,MACtB3B,EAAG,MAGN,IAEG4B,EAAWH,uBAAY,WAC3B,GAAKP,EAAcQ,SAAYV,EAAUU,QAAzC,CACAR,EAAcQ,QAAQG,UACpBxC,EACA,EACA,GAEF,IAAK,IAAIyC,EAAI,EAAGA,EAAIX,EAAgBO,QAAQK,OAAQD,IAAK,CACvD,IAAME,EAAWxC,EAAayC,ODnEX,GCkGnB,GA5BAf,EAAcQ,QAAQG,UACpBrC,EACA2B,EAAgBO,QAAQI,GAAG/B,EAC3BoB,EAAgBO,QAAQI,GAAG9B,GAI7BkB,EAAcQ,QAAQG,UACpBpC,EACA0B,EAAgBO,QAAQI,GAAG/B,EAC3BoB,EAAgBO,QAAQI,GAAG9B,EAAIgC,GAIjCb,EAAgBO,QAAQI,GAAG/B,IDrEF,MCwErBoB,EAAgBO,QAAQI,GAAG/B,IAC7BoB,EAAgBO,QAAhB,sBACKP,EAAgBO,SADrB,CAEE,CACE3B,EAAGiB,EAAUU,QAAQC,MACrB3B,EAAGkC,KAAKC,MAAMD,KAAKE,SAAW5C,EAAayC,QAAUzC,EAAayC,WAQpEpB,EAAUf,SAASC,EAAIT,EAAUqC,OAASR,EAAgBO,QAAQI,GAAG/B,GACrEc,EAAUf,SAASC,GAAKoB,EAAgBO,QAAQI,GAAG/B,EAAIP,EAAamC,QAElEd,EAAUf,SAASE,GAAKmB,EAAgBO,QAAQI,GAAG9B,EAAIR,EAAayC,QACpEpB,EAAUf,SAASE,EAAIV,EAAU2C,QAAUd,EAAgBO,QAAQI,GAAG9B,EAAIgC,IAG9EnB,EAAUf,SAASE,EAAIV,EAAU2C,QAAUjB,EAAUU,QAAQO,OAAS1C,EAAY0C,OAMlF,MAJEI,OAAOC,qBAAqBlB,EAAUM,SACxCF,IACAI,IAEM,kBDjGoB,ICqGxBT,EAAgBO,QAAQI,GAAG/B,IAC7Ba,EAAMc,UACN/B,EAAW4C,QAKfrB,EAAcQ,QAAQG,UACpBtC,EACA,EACAyB,EAAUU,QAAQO,OAAS1C,EAAY0C,QAIzCf,EAAcQ,QAAQG,UACpBvC,EACAuB,EAAUf,SAASC,EACnBc,EAAUf,SAASE,GAGrBa,EAAUf,SAASE,GDxIU,IC2I7BkB,EAAcQ,QAAQc,UAAY7B,EAClCO,EAAcQ,QAAQe,KAAO9B,EAC7BO,EAAcQ,QAAQgB,SACpB/B,EAAgBC,EAAMc,SACtB,GACAV,EAAUU,QAAQO,OAAS,IAE7Bb,EAAUM,QAAUW,OAAOM,sBAAsBf,MAChD,CAACJ,IAEEoB,EAAuBnB,uBAAY,WAAO,IAAD,EAC7CY,OAAOQ,oBAAoB,UAAWC,GACtC,UAAA9B,EAAUU,eAAV,SAAmBmB,oBAAoB,aAAcC,GACnDT,OAAOC,qBAAqBlB,EAAUM,WACvC,CAACN,IAEE0B,EAAsB,WAC1BjC,EAAUf,SAASE,GAAK,GACxBN,EAAS6C,QAmBT,OAhBFQ,qBAAU,WAWN,OArII/B,EAAUU,UACZR,EAAcQ,QAAUV,EAAUU,QAAQsB,WAAW,OA2HzDxB,IAjIE9B,EAAWc,EAAOe,IAAI,OACtB5B,EAAaa,EAAOe,IAAI,SAkI1B,sBAAC,4BAAAD,EAAA,sEACOD,IADP,OAECO,IACAS,OAAOtD,iBAAiB,UAAW+D,GACnC,UAAA9B,EAAUU,eAAV,SAAmB3C,iBAAiB,aAAc+D,GAJnD,0CAAD,GAOS,WACLF,OAED,CAACA,EAAsBhB,EAAUJ,IAGlC,4BACEyB,UAAWC,EACXC,IAAKnC,EACLW,MAAO/B,EACPqC,OAAQrC","file":"static/js/SceneComponent.2f98aa64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Scene\":\"Scene_Scene__5AIfT\"};","export default __webpack_public_path__ + \"static/media/bg.093d36bb.png\";","export default __webpack_public_path__ + \"static/media/bird.71e31e9e.png\";","export default __webpack_public_path__ + \"static/media/fg.1aff9f5e.png\";","export default __webpack_public_path__ + \"static/media/pipeNorth.3e4cf42d.png\";","export default __webpack_public_path__ + \"static/media/pipeSouth.d354aa87.png\";","export default __webpack_public_path__ + \"static/media/fly.e734c795.mp3\";","export default __webpack_public_path__ + \"static/media/score.92d4be02.mp3\";","export function createImage(url: string): Promise<HTMLImageElement> {\r\n  return new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener('load', () => resolve(image));\r\n    image.addEventListener('error', error => reject(error));\r\n    image.setAttribute('crossOrigin', 'anonymous');\r\n    image.src = url;\r\n  });\r\n}\r\n","export function createAudio(url: string): HTMLAudioElement {\r\n  return new Audio(url);\r\n}\r\n","import {CoordinatesType} from './Scene.types';\r\nimport Background from \"../../../assets/images/bg.png\";\r\nimport Bird from \"../../../assets/images/bird.png\";\r\nimport Ground from \"../../../assets/images/fg.png\";\r\nimport TopPipe from \"../../../assets/images/pipeNorth.png\";\r\nimport BottomPipe from \"../../../assets/images/pipeSouth.png\";\r\nimport FlySound from \"../../../assets/sounds/fly.mp3\";\r\nimport ScoreSound from \"../../../assets/sounds/score.mp3\";\r\nimport {createAudio, createImage} from \"../../../helpers\";\r\n\r\nexport const GAP_VALUE = 80;\r\nexport const GRAVITATION_VALUE = 1.7;\r\n\r\nexport const CANVAS = {\r\n  width: 288,\r\n  height: 512\r\n}\r\n\r\nexport const BIRD: { position: CoordinatesType } = {\r\n  position:  {\r\n    x: 10,\r\n    y: 150\r\n  }\r\n};\r\n\r\nexport const PIPE_X_ENDPOINT = 125;\r\nexport const PIPE_X_UPPER_SCORE = 5;\r\n\r\nexport const sceneImages = new Map([\r\n  [\r\n    'background',\r\n    createImage(Background)\r\n  ],\r\n  [\r\n    'bird',\r\n    createImage(Bird)\r\n  ],\r\n  [\r\n    'ground',\r\n    createImage(Ground)\r\n  ],\r\n  [\r\n    'topPipe',\r\n    createImage(TopPipe)\r\n  ],\r\n  [\r\n    'bottomPipe',\r\n    createImage(BottomPipe)\r\n  ]\r\n]);\r\n\r\nexport const sounds = new Map([\r\n  [\r\n    'fly',\r\n    createAudio(FlySound)\r\n  ],\r\n  [\r\n    'score', createAudio(ScoreSound)\r\n  ]\r\n]);\r\n\r\nexport const SCORE_TEXT = {\r\n  fill: '#000',\r\n  font: '16px Century Gothic',\r\n  text: (score: number) => `Score: ${score}`\r\n}\r\n","import React, {useEffect, useRef, useCallback} from 'react';\r\nimport classes from './Scene.module.css';\r\nimport _cloneDeep from 'lodash/cloneDeep';\r\n\r\nimport {\r\n  sounds,\r\n  sceneImages,\r\n  GAP_VALUE,\r\n  GRAVITATION_VALUE,\r\n  BIRD,\r\n  PIPE_X_ENDPOINT,\r\n  CANVAS,\r\n  PIPE_X_UPPER_SCORE,\r\n  SCORE_TEXT\r\n} from './constants';\r\nimport {CoordinatesType} from './Scene.types';\r\n\r\nconst BIRD_COPY = _cloneDeep(BIRD);\r\n\r\nlet backgroundImage: HTMLImageElement;\r\nlet birdImage: HTMLImageElement;\r\nlet groundImage: HTMLImageElement;\r\nlet topPipeImage: HTMLImageElement;\r\nlet bottomPipeImage: HTMLImageElement;\r\nlet flySound: HTMLAudioElement;\r\nlet scoreSound: HTMLAudioElement\r\n\r\nconst Scene = () => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const canvasContext = useRef<CanvasRenderingContext2D>();\r\n    const pipesCoordinate = useRef<CoordinatesType[]>([]);\r\n\r\n    const score = useRef<number>(0);\r\n    const requestID = useRef<number>(0);\r\n\r\n    const loadSceneImages = async () => {\r\n      backgroundImage = await sceneImages.get('background') as HTMLImageElement;\r\n      birdImage = await sceneImages.get('bird') as HTMLImageElement;\r\n      groundImage = await sceneImages.get('ground') as HTMLImageElement;\r\n      topPipeImage = await sceneImages.get('topPipe') as HTMLImageElement;\r\n      bottomPipeImage = await sceneImages.get('bottomPipe') as HTMLImageElement;\r\n    };\r\n\r\n    const loadSceneSounds = () => {\r\n      flySound = sounds.get('fly') as HTMLAudioElement;\r\n      scoreSound = sounds.get('score') as HTMLAudioElement;\r\n    }\r\n\r\n    const initCanvasContext = () => {\r\n      if (canvasRef.current) {\r\n        canvasContext.current = canvasRef.current.getContext('2d') as CanvasRenderingContext2D;\r\n      }\r\n    };\r\n\r\n  const setStarterValues = useCallback(() => {\r\n    BIRD_COPY.position = {\r\n      ...BIRD.position\r\n    };\r\n\r\n    score.current = 0;\r\n\r\n    pipesCoordinate.current = [\r\n      {\r\n        x: canvasRef.current?.width as number,\r\n        y: 0,\r\n      }\r\n    ];\r\n  }, []);\r\n\r\n  const renderer = useCallback(() => {\r\n    if (!canvasContext.current || !canvasRef.current) return;\r\n    canvasContext.current.drawImage(\r\n      backgroundImage,\r\n      0,\r\n      0\r\n    );\r\n    for (let i = 0; i < pipesCoordinate.current.length; i++) {\r\n      const constant = topPipeImage.height + GAP_VALUE;\r\n\r\n      /* Draw top pipe */\r\n      canvasContext.current.drawImage(\r\n        topPipeImage,\r\n        pipesCoordinate.current[i].x,\r\n        pipesCoordinate.current[i].y\r\n      );\r\n\r\n      /* Draw bottom pipe */\r\n      canvasContext.current.drawImage(\r\n        bottomPipeImage,\r\n        pipesCoordinate.current[i].x,\r\n        pipesCoordinate.current[i].y + constant\r\n      );\r\n\r\n      /* Move pipes */\r\n      pipesCoordinate.current[i].x--;\r\n\r\n      /* Add new pipes */\r\n      if (pipesCoordinate.current[i].x === PIPE_X_ENDPOINT) {\r\n        pipesCoordinate.current = [\r\n          ...pipesCoordinate.current,\r\n          {\r\n            x: canvasRef.current.width,\r\n            y: Math.floor(Math.random() * topPipeImage.height) - topPipeImage.height,\r\n          }\r\n        ];\r\n      }\r\n\r\n      /* Bit about pipes */\r\n      if (\r\n        (\r\n          BIRD_COPY.position.x + birdImage.width >= pipesCoordinate.current[i].x &&\r\n          BIRD_COPY.position.x <= pipesCoordinate.current[i].x + topPipeImage.width &&\r\n          (\r\n            BIRD_COPY.position.y <= pipesCoordinate.current[i].y + topPipeImage.height ||\r\n            BIRD_COPY.position.y + birdImage.height >= pipesCoordinate.current[i].y + constant\r\n          )\r\n        ) ||\r\n        BIRD_COPY.position.y + birdImage.height >= canvasRef.current.height - groundImage.height\r\n      ) {\r\n          window.cancelAnimationFrame(requestID.current);\r\n        setStarterValues();\r\n        renderer();\r\n        // eslint-disable-next-line no-throw-literal\r\n        throw 'End of the game';\r\n      }\r\n\r\n      /* Change score */\r\n      if (pipesCoordinate.current[i].x === PIPE_X_UPPER_SCORE) {\r\n        score.current++;\r\n        scoreSound.play();\r\n      }\r\n    }\r\n\r\n    /* Draw ground */\r\n    canvasContext.current.drawImage(\r\n      groundImage,\r\n      0,\r\n      canvasRef.current.height - groundImage.height\r\n    );\r\n\r\n    /* Draw bird */\r\n    canvasContext.current.drawImage(\r\n      birdImage,\r\n      BIRD_COPY.position.x,\r\n      BIRD_COPY.position.y\r\n    );\r\n\r\n    BIRD_COPY.position.y += GRAVITATION_VALUE;\r\n\r\n    /* Draw score */\r\n    canvasContext.current.fillStyle = SCORE_TEXT.fill;\r\n    canvasContext.current.font = SCORE_TEXT.font;\r\n    canvasContext.current.fillText(\r\n      SCORE_TEXT.text(score.current),\r\n      10,\r\n      canvasRef.current.height - 20\r\n    );\r\n    requestID.current = window.requestAnimationFrame(renderer);\r\n  }, [setStarterValues]);\r\n\r\n  const removeEventListeners = useCallback(() => {\r\n    window.removeEventListener('keydown', keyDownPressHandler);\r\n    canvasRef.current?.removeEventListener('touchstart', keyDownPressHandler);\r\n      window.cancelAnimationFrame(requestID.current);\r\n  }, [requestID]);\r\n\r\n  const keyDownPressHandler = () => {\r\n    BIRD_COPY.position.y -= 30;\r\n    flySound.play();\r\n  }\r\n\r\n  useEffect(() => {\r\n    initCanvasContext();\r\n    setStarterValues();\r\n    loadSceneSounds();\r\n    (async() => {\r\n      await loadSceneImages();\r\n      renderer();\r\n      window.addEventListener('keydown', keyDownPressHandler);\r\n      canvasRef.current?.addEventListener('touchstart', keyDownPressHandler)\r\n    })();\r\n\r\n      return () => {\r\n        removeEventListeners();\r\n      };\r\n    }, [removeEventListeners, renderer, setStarterValues]);\r\n\r\n    return (\r\n      <canvas\r\n        className={classes.Scene}\r\n        ref={canvasRef}\r\n        width={CANVAS.width}\r\n        height={CANVAS.height}\r\n      />\r\n    );\r\n};\r\n\r\nexport default Scene;\r\n"],"sourceRoot":""}